{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","setSelectedTodoId","setSelectedUserId","className","map","todo","id","completed","title","type","onClick","userId","prevId","TodoFilter","status","setStatus","searchQuery","setSearchQuery","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","Loader","wait","delay","Promise","resolve","setTimeout","get","url","fullURL","then","fetch","res","json","TodoModal","user","useState","isModalLoading","setIsModalLoading","useEffect","href","email","name","App","setTodos","selectedUser","setSelectedUser","selectedUserId","filteredTodos","setFilteredTodos","isLoading","setIsLoading","selectedTodo","useMemo","find","data","catch","currentTodos","filter","trim","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59508be0.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n// import cn from 'classnames';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number | null\n  setSelectedTodoId: React.Dispatch<React.SetStateAction<number | null>>;\n  setSelectedUserId: React.Dispatch<React.SetStateAction<number>>\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  setSelectedTodoId,\n  setSelectedUserId,\n}) => {\n  const handleButtonClick = (id: number, userId: number) => {\n    setSelectedTodoId(prevId => (prevId === id ? null : id));\n    setSelectedUserId(userId);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={\n              selectedTodoId === todo.id\n                ? 'has-background-info-light'\n                : ''\n            }\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed ? 'has-text-success' : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleButtonClick(todo.id, todo.userId)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={\n                      selectedTodoId === todo.id\n                        ? 'far fa-eye-slash'\n                        : 'far fa-eye'\n                    }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  status: string;\n  setStatus: React.Dispatch<React.SetStateAction<string>>;\n  setSearchQuery: React.Dispatch<React.SetStateAction<string>>;\n  searchQuery: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  status,\n  setStatus,\n  searchQuery,\n  setSearchQuery,\n}) => {\n  const handleStatusChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setStatus(event.target.value);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleClearInput = () => {\n    setSearchQuery('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n  };\n\n  return (\n    <form className=\"field has-addons\" onSubmit={handleSubmit}>\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleStatusChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleInputChange}\n          value={searchQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\n// const BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\nconst BASE_URL = 'http://localhost:3000/api/';\n\n// This function creates a promise\n// that is resolved after a given delay\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { wait } from '../../api';\n\ntype Props = {\n  setSelectedTodoId: React.Dispatch<React.SetStateAction<number | null>>;\n  user: User | null;\n  todo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setSelectedTodoId,\n  user,\n  todo,\n}) => {\n  const [isModalLoading, setIsModalLoading] = useState(true);\n\n  useEffect(() => {\n    wait(300).then(() => {\n      setIsModalLoading(false);\n    });\n  }, []);\n\n  const handleDeleteClick = () => {\n    setSelectedTodoId(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isModalLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleDeleteClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const [status, setStatus] = useState('all');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n\n  const selectedTodo = useMemo(() => {\n    return todos.find(todo => todo.id === selectedTodoId);\n  }, [todos, selectedTodoId]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(data => {\n        setTodos(data);\n        setFilteredTodos(data);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    let currentTodos = todos;\n\n    switch (status) {\n      case 'completed':\n        currentTodos = todos.filter(todo => todo.completed);\n        break;\n      case 'active':\n        currentTodos = todos.filter(todo => !todo.completed);\n        break;\n      default:\n        currentTodos = todos;\n        break;\n    }\n\n    if (searchQuery.trim() !== '') {\n      currentTodos = currentTodos.filter(todo => todo.title.toLowerCase()\n        .includes(searchQuery.toLowerCase()));\n    }\n\n    setFilteredTodos(currentTodos);\n\n    getUser(selectedUserId)\n      .then(setSelectedUser);\n  }, [status, todos, searchQuery, selectedUserId]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={status}\n                setStatus={setStatus}\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodoId={selectedTodoId}\n                  setSelectedTodoId={setSelectedTodoId}\n                  setSelectedUserId={setSelectedUserId}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          setSelectedTodoId={setSelectedTodoId}\n          user={selectedUser}\n          todo={selectedTodo}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}